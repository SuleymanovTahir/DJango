# Ваш файл signals.py

from django.db.models.signals import post_migrate,post_save
from django.dispatch import receiver
from django.apps import AppConfig

from .models import Icecream  # Импортируйте ваши модели

# Создаем функцию для создания объектов Icecream

# Используем сигнал Django для выполнения функции после миграции
# @receiver(post_save, sender=AppConfig)
# def on_post_save(sender, instance, **kwargs):
#     # Проверяем, что экземпляр AppConfig относится к 'mains', чтобы избежать выполнения для других приложений
#     if instance.name == 'mains':
#         icecream_db = [
#             {
#                 'name': 'Золотое мороженое',
#                 'description': ('Шарики таитянского ванильного мороженого, шоколад '
#                                 '"Amedei Porcelana" и груда экзотических фруктов.'
#                                 'Всё это покрыто золотой фольгой, '
#                                 'её тоже полагается съесть.'),
#         },
#         {
#         'name': 'Готическое мороженое',
#         'description': ('Чёрное мороженое в чёрном вафельном рожке для '
#                         'true black goths. Состав: сливочное мороженое, '
#                         'миндаль, активированный уголь, чернота, мрак, отрицание.'),
#         },
#         {
#         'name': 'Мороженое паста карбонара',
#         'description': ('Порция макарон под тёмным соусом. '
#                         'Паста — из ванильного мороженого, '
#                         'продавленного через пресс с дырочками, '
#                         'соус — ликёр с орехами. Buon appetito!'),
#         },
#         {
#         'name': 'Фруктово-ягодное мороженое ГОСТ 119-52',
#         'description': ('Сырьё: сливки, пахта, фрукты и ягоды в свежем виде, '
#                         'яичный порошок из куриных яиц, патока карамельная. '
#                         'Общее количество микробов в 1 мл мороженого: '
#                         'не более 250 тыс.'),
#         },
#         {
#         'name': 'Люминесцентное мороженое',
#         'description': ('Сливочное мороженое с белками, активированными кальцием. '
#                         'Светится, если облизнуть. '
#                         'Можно подавать в тыкве на Хэллоуин '
#                         'или кормить собаку Баскервилей.'),
#         },
#         {
#         'name': 'Жареное мороженое',
#         'description': ('Шарики мороженого обваливают яйце и в панировке, '
#                         'сильно замораживают и быстро обжаривают '
#                         'в растительном масле. Едят быстро.'),
#         },
#         {
#         'name': 'Томатное мороженое',
#         'description': ('Сливки, помидоры, чеснок, лавровый лист, '
#                         'молотый перец. Если растает — '
#                         'можно подавать к обеду как первое блюдо.'),
#         },
#     ]

#     for icecream_data in icecream_db:
#         icecream, created = Icecream.objects.get_or_create(name=icecream_data['name'], defaults=icecream_data)
#         print(f"Icecream {icecream.name} created: {created}")